---
import Campana from '@/icons/Campana.astro';
---

<h2 class="text-center text-lg mb-4">¿Cuanto tiempo falta?</h2>

<section id="countdown" class="max-w-fit mx-auto grid grid-cols-1 place-items-center 2xs:grid-cols-2 xs:grid-cols-4 gap-4 overflow-clip rounded-md">
    <div class="grid grid-rows-[1fr_auto] size-25 bg-amber-500 text-white rounded-md">
        <span id="temporizadorDias" class="flex font-bold text-white/90 justify-center items-center text-3xl py-2">0</span>
        <span style="--delay: 0s;" class="indicador w-full text-center rounded-b-md py-1 -bg-linear-60 from-amber-600 via-amber-500 to-amber-600">D</span>
    </div>
    <div class="grid grid-rows-[1fr_auto] size-25 bg-amber-500 text-white rounded-md">
        <span id="temporizadorHoras" class="flex font-bold text-white/90 justify-center items-center text-3xl py-2">0</span>
        <span style="--delay: 1s;" class="indicador w-full text-center rounded-b-md py-1 -bg-linear-60 from-amber-600 via-amber-500 to-amber-600">H</span>
    </div>
    <div class="grid grid-rows-[1fr_auto] size-25 bg-amber-500 text-white rounded-md">
        <span id="temporizadorMinutos" class="flex font-bold text-white/90 justify-center items-center text-3xl py-2">0</span>
        <span style="--delay: 2s;" class="indicador w-full text-center rounded-b-md py-1 -bg-linear-60 from-amber-600 via-amber-500 to-amber-600">M</span>
    </div>
    <div class="grid grid-rows-[1fr_auto] size-25 bg-amber-500 text-white rounded-md">
        <span id="temporizadorSegundos" class="flex font-bold text-white/90 justify-center items-center text-3xl py-2">0</span>
        <span style="--delay: 3s;" class="indicador w-full text-center rounded-b-md py-1 -bg-linear-60 from-amber-600 via-amber-500 to-amber-600">S</span>
    </div>
</section>

<section id="iniciado" class="hidden flex-wrap justify-center items-center gap-4 bg-amber-100 px-5 py-10 text-center">
    <Campana class="shrink-0 [animation:wiggle_0.3s_linear_infinite]" />
    <span id="evento" class="text-amber-500 font-bold text-3xl">¡Hoy es el día!</span>
    <Campana class="shrink-0 [animation:wiggle_0.3s_linear_infinite]" />
</section>

<script>
    import { lanzarConfetti } from "@/lib/confetti";

    const targetDate = new Date('2025-06-28T00:00:00').getTime();
    const misaDate = new Date('2025-06-28T12:00:00').getTime();
    const fiestaDate = new Date('2025-06-28T14:00:00').getTime();
    const finDate = new Date('2025-06-28T23:59:59').getTime();

    const countdownElement = document.getElementById('countdown') as HTMLDivElement;
    const iniciadoElement = document.getElementById('iniciado') as HTMLDivElement;
    const eventoElement = document.getElementById('evento') as HTMLSpanElement;

    let lastConfettiTime = 0;
    const confettiCooldown = 1000; // 1 segundo de enfriamiento para los lanzamientos de confetti

    function actualizarContador(){
        const now = new Date().getTime();
        const distance = targetDate - now;

        // Cuenta atrás terminada
        if (distance < 0) {
            iniciadoElement.classList.remove('hidden');
            iniciadoElement.classList.add('flex');
            countdownElement.classList.add('hidden');
            clearInterval(intervalo);

            // Mostrar el evento actual
            setInterval(actualizarEvento, 1000)

            return;
        }

        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);

        const temporizadorDias = document.getElementById('temporizadorDias') as HTMLSpanElement;
        const temporizadorHoras = document.getElementById('temporizadorHoras') as HTMLSpanElement;
        const temporizadorMinutos = document.getElementById('temporizadorMinutos') as HTMLSpanElement;
        const temporizadorSegundos = document.getElementById('temporizadorSegundos') as HTMLSpanElement;

        temporizadorDias.textContent = days.toString();
        temporizadorHoras.textContent = hours.toString().padStart(2, '0');
        temporizadorMinutos.textContent = minutes.toString().padStart(2, '0');
        temporizadorSegundos.textContent = seconds.toString().padStart(2, '0');
    }

    function actualizarEvento(){
        const timestamp = new Date().getTime();

        if (timestamp >= misaDate && timestamp < fiestaDate) {
            eventoElement.textContent = '¡Es hora de la misa!';
        } else if (timestamp >= fiestaDate && timestamp <= finDate) {
            eventoElement.textContent = '¡Es hora de la fiesta!';
        } else if (timestamp > finDate) {
            eventoElement.textContent = '¡Muchas gracias por acompañarme!';
        }
    }

    const intervalo = setInterval(actualizarContador, 1000);

    // Observar el elemento para lanzar confetti
    function intersectConfetti(){
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const now = Date.now();
                    if(now - lastConfettiTime > confettiCooldown && now > targetDate && now < finDate){
                        lanzarConfetti();
                        lastConfettiTime = now;
                    }
                }
            });
        }, {
            threshold: 0,
            rootMargin: '-50% 0px -50% 0px', // Inicia la animación cuando el elemento está a la mitad de la pantalla
        })
        
        observer.observe(iniciadoElement);
    }

    window.addEventListener("load", intersectConfetti);
</script>

<style is:global>
    .indicador{
        position: relative;
        overflow: hidden;
    }
    .indicador::after{
        content: "";
        display: block;
        width: 20px;
        height: 100px;
        background: linear-gradient(90deg, rgb(255 255 255 / .1), rgb(255 255 255 / .2), rgb(255 255 255 / .1));
        transform: skewX(-20deg);
        position: absolute;
        bottom: 0;
        left: -60%;
        animation: indicador 10s var(--delay) linear infinite;
    }

    @keyframes indicador {
        0% {
            left: -60%;
        }
        10%, 100%{
            left: calc(130%);
        }
    }
</style>