---
import Resta from "@/icons/Resta.astro";
import Suma from "@/icons/Suma.astro";
---

<form id="form-asistencia" class="max-w-fit mx-auto flex flex-col justify-center items-center gap-4 p-8 rounded-md bg-white shadow-md">
    <h2 class="text-lg text-center text-balance">Por favor, confirma tu asistencia a la fiesta</h2>
    <div class="w-full flex flex-col 2xs:flex-row gap-2">
        <button type="button" id="btnMenos" class="flex justify-center items-center w-full bg-amber-500 hover:bg-amber-600 text-white size-10 rounded-md"><Resta /></button>
        <input id="inputAsistencia" type="number" id="asistencia" name="asistencia" min="1" max="5" value="1" class="w-full size-10 outline-none border-2 rounded-md text-center" />
        <button type="button" id="btnMas" class="flex justify-center items-center w-full bg-amber-500 hover:bg-amber-600 text-white size-10 rounded-md"><Suma /></button>
    </div>
    <button id="btnEnviarAsistencia" type="submit" class="w-full bg-amber-500 hover:bg-amber-600 disabled:bg-amber-800 text-white py-2 px-8 rounded-md">Enviar</button>
</form>

<section class="mensaje-gracias hidden flex-col gap-2 justify-center items-center bg-amber-100 p-8 rounded-md shadow-md text-center">
    <p class="text-3xl text-amber-600 font-bold" id="asistenciaGracias">¡Gracias por confirmar tu asistencia!</p>
    <p class="text-lg text-gray-500">¡Nos vemos pronto!</p>
    <div class="w-full flex flex-wrap justify-center gap-2 mt-8">
        <span class="text-black/50 text-sm">¿Confirmaste por error?</span>
        <button id="btnCancelarAsistencia" class="text-amber-500 hover:text-amber-600 font-semibold text-sm">Cancelar asistencia</button>
    </div>
</section>

<script>
    import { DATES } from "@/config";
    import { showToast } from "@/lib/toast";
    import { lanzarConfetti } from "@/lib/confetti";

    const fiestaDate = new Date(DATES.FIESTA_DATE).getTime();

    const form = document.getElementById('form-asistencia') as HTMLFormElement;
    const btnMenos = document.getElementById('btnMenos') as HTMLButtonElement;
    const btnMas = document.getElementById('btnMas') as HTMLButtonElement;
    const inputAsistencia = document.getElementById('inputAsistencia') as HTMLInputElement;
    const mensajeGracias = document.querySelector('.mensaje-gracias') as HTMLDivElement;
    const btnEnviarAsistencia = document.getElementById('btnEnviarAsistencia') as HTMLButtonElement;
    const btnCancelarAsistencia = document.getElementById('btnCancelarAsistencia') as HTMLButtonElement;
    const asistenciaGracias = document.getElementById('asistenciaGracias') as HTMLParagraphElement;

    const min = parseInt(inputAsistencia.min);
    const max = parseInt(inputAsistencia.max);

    function toggleMensajeGracias() {
        if (localStorage.getItem("asistencia")) {
            // Si ya se ha confirmado la asistencia, mostrar mensaje de agradecimiento
            const asistencias = JSON.parse(localStorage.getItem("asistencia") || "{}").asistencia;
            if (asistenciaGracias) asistenciaGracias.textContent = `¡Gracias por confirmar ${asistencias == 1 ? "tu" : asistencias} asistencia${asistencias == 1 ? '' : 's'}!`;
            
            mensajeGracias.classList.remove('hidden');
            mensajeGracias.classList.add('flex');
            form.classList.add('hidden');
        } else {
            // Si no se ha confirmado la asistencia, ocultar mensaje de agradecimiento
            mensajeGracias.classList.add('hidden');
            mensajeGracias.classList.remove('flex');
            form.classList.remove('hidden');
        }
    }

    // Enviar la asistencia a la base de datos
    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Comprobar si todavía no empieza la fiesta
        const now = new Date().getTime();
        if (fiestaDate < now) {
            return showToast({
                mensaje: "La fiesta ya ha comenzado.",
                tipo: "warning",
            });
        }

        // Comprobar si ya se ha confirmado la asistencia
        if(localStorage.getItem("asistencia")){
            form.reset();
            return showToast({
                mensaje: "Gracias por acompañarme, ya has confirmado tu asistencia.",
                tipo: "warning",
            });
        }

        const asistencia = inputAsistencia.value;
        
        // Deshabilitar el botón de enviar asistencia
        btnEnviarAsistencia.disabled = true;
        btnEnviarAsistencia.textContent = "Enviando...";

        let element = showToast({
            mensaje: "Enviando asistencia...",
            tipo: "info",
            promise: true
        });

        // Enviar asistencia a la base de datos
        try{
            const res = await fetch("/api/asistencia", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    userid: localStorage.getItem("user_id"),
                    asistencia: Math.max(min, Math.min(parseInt(asistencia), max))
                }),
            });
            const { id } = await res.json();
            if (!res.ok) {
                localStorage.removeItem("asistencia");
                return showToast({
                    elemento: element,
                    mensaje: "Error al enviar la asistencia, por favor intenta de nuevo más tarde.",
                    tipo: "error",
                });
            }

            showToast({
                elemento: element,
                mensaje: "Gracias por confirmar tu asistencia",
                tipo: "success",
            });
            lanzarConfetti();

            // Update the localstorage data
            localStorage.setItem("asistencia", JSON.stringify({ asistencia, id }));
            form.reset();
        } catch(error){
            localStorage.removeItem("asistencia");
            showToast({
                elemento: element,
                mensaje: "Error al enviar la asistencia, por favor intenta de nuevo más tarde.",
                tipo: "error",
            });
        } finally {
            btnEnviarAsistencia.disabled = false;
            btnEnviarAsistencia.textContent = "Enviar";
            toggleMensajeGracias();
        }
    });

    // Cancelar asistencia
    btnCancelarAsistencia.addEventListener('click', async () => {
        // Try to get the attendance id from localStorage
        const idLocalStorage = JSON.parse(localStorage.getItem("asistencia") || "{}").id;
        if(!idLocalStorage){
            // If there is different format for localStorage or no id is found, delete the localStorage item
            // to show the form again, but without actually deleting the attendance in the database
            localStorage.removeItem("asistencia");
            toggleMensajeGracias();
            return;
        }

        // Deshabilitar el botón de cancelar asistencia
        btnCancelarAsistencia.disabled = true;
        
        let element = showToast({
            mensaje: "Cancelando asistencia...",
            tipo: "info",
            promise: true
        });

        try{
            const res = await fetch("/api/asistencia", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    id: idLocalStorage,
                }),
            });
            if (!res.ok) {
                return showToast({
                    elemento: element,
                    mensaje: "Error al cancelar la asistencia, por favor intenta de nuevo más tarde.",
                    tipo: "error",
                });
            }

            showToast({
                elemento: element,
                mensaje: "Asistencia cancelada correctamente",
                tipo: "success",
            });

            localStorage.removeItem("asistencia");
        } catch (error){
            showToast({
                elemento: element,
                mensaje: "Error al cancelar la asistencia, por favor intenta de nuevo más tarde.",
                tipo: "error",
            });
        } finally {
            btnCancelarAsistencia.disabled = false;
            toggleMensajeGracias();
        }
    });

    btnMenos.addEventListener('click', () => {
        let value = parseInt(inputAsistencia.value);
        if (value > min) {
            value--;
            inputAsistencia.value = value.toString();
        }
    });

    btnMas.addEventListener('click', () => {
        let value = parseInt(inputAsistencia.value);
        if (value < max) {
            value++;
            inputAsistencia.value = value.toString();
        }
    });

    window.addEventListener('load', () => {
        const now = new Date().getTime();
        const distance = fiestaDate - now;

        // Si ya inició la fiesta, no mostrar el formulario de asistencia
        if (distance < 0) {
            form.classList.add('hidden');
            return;
        }

        // Si la fiesta aún no ha iniciado, mostrar el formulario de asistencia o hacer el toggle para el mensaje de gracias
        toggleMensajeGracias();
    });
</script>

<style>
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>