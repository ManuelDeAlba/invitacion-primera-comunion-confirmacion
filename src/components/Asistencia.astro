---
import Resta from "@/icons/Resta.astro";
import Suma from "@/icons/Suma.astro";
---

<form id="form-asistencia" class="max-w-fit mx-auto flex flex-col justify-center items-center gap-4 p-8 rounded-md bg-white shadow-md">
    <h2 class="text-lg">Confirmar asistencia a la fiesta</h2>
    <div class="w-full flex flex-col 2xs:flex-row gap-2">
        <button type="button" id="btnMenos" class="flex justify-center items-center w-full bg-amber-500 hover:bg-amber-600 text-white size-10 rounded-md"><Resta /></button>
        <input id="inputAsistencia" type="number" id="asistencia" name="asistencia" min="1" max="5" value="1" class="w-full size-10 outline-none border-2 rounded-md text-center" />
        <button type="button" id="btnMas" class="flex justify-center items-center w-full bg-amber-500 hover:bg-amber-600 text-white size-10 rounded-md"><Suma /></button>
    </div>
    <button type="submit" class="w-full bg-amber-500 hover:bg-amber-600 text-white py-2 px-8 rounded-md">Enviar</button>
</form>

<section class="mensaje-gracias hidden flex-col gap-2 justify-center items-center bg-amber-100 p-8 rounded-md shadow-md text-center">
    <p class="text-3xl text-amber-600 font-bold">¡Gracias por confirmar tu asistencia!</p>
    <p class="text-lg text-gray-500">¡Nos vemos pronto!</p>
</section>

<script>
    import { showToast } from "@/lib/toast";

    const form = document.getElementById('form-asistencia') as HTMLFormElement;
    const btnMenos = document.getElementById('btnMenos') as HTMLButtonElement;
    const btnMas = document.getElementById('btnMas') as HTMLButtonElement;
    const inputAsistencia = document.getElementById('inputAsistencia') as HTMLInputElement;
    const mensajeGracias = document.querySelector('.mensaje-gracias') as HTMLDivElement;

    const min = parseInt(inputAsistencia.min);
    const max = parseInt(inputAsistencia.max);

    function toggleMensajeGracias() {
        if (localStorage.getItem("asistencia") === "true") {
            // Si ya se ha confirmado la asistencia, mostrar mensaje de agradecimiento
            mensajeGracias.classList.remove('hidden');
            mensajeGracias.classList.add('flex');
            form.classList.add('hidden');
        } else {
            // Si no se ha confirmado la asistencia, ocultar mensaje de agradecimiento
            mensajeGracias.classList.add('hidden');
            mensajeGracias.classList.remove('flex');
            form.classList.remove('hidden');
        }
    }

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Comprobar si ya se ha confirmado la asistencia
        if(localStorage.getItem("asistencia") === "true"){
            form.reset();
            return showToast({
                mensaje: "Gracias por acompañarme, ya has confirmado tu asistencia.",
                tipo: "warning",
            });
        }

        const asistencia = inputAsistencia.value;
        
        // Optimistic UI update
        // Mostrar el mensaje de agradecimiento inmediatamente para evitar que lo manden muchas veces
        localStorage.setItem("asistencia", "true");
        toggleMensajeGracias();

        // Enviar asistencia a la base de datos
        let element;
        try{
            const res = await fetch("/api/asistencia", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    asistencia: Math.max(min, Math.min(parseInt(asistencia), max))
                }),
            });
            element = showToast({
                mensaje: "Enviando asistencia...",
                tipo: "info"
            });
            if (!res.ok) {
                localStorage.removeItem("asistencia");
                return showToast({
                    elemento: element,
                    mensaje: "Error al enviar la asistencia, por favor intenta de nuevo más tarde.",
                    tipo: "error",
                });
            }

            showToast({
                elemento: element,
                mensaje: "Gracias por confirmar tu asistencia",
                tipo: "success",
            });

            form.reset();
        } catch(error){
            localStorage.removeItem("asistencia");
            toggleMensajeGracias();
            showToast({
                elemento: element,
                mensaje: "Error al enviar la asistencia, por favor intenta de nuevo más tarde.",
                tipo: "error",
            });
        }
    });

    btnMenos.addEventListener('click', () => {
        let value = parseInt(inputAsistencia.value);
        if (value > min) {
            value--;
            inputAsistencia.value = value.toString();
        }
    });

    btnMas.addEventListener('click', () => {
        let value = parseInt(inputAsistencia.value);
        if (value < max) {
            value++;
            inputAsistencia.value = value.toString();
        }
    });

    window.addEventListener('load', () => {
        toggleMensajeGracias();
    });
</script>

<style>
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>