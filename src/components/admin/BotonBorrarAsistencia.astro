<button {...Astro.props}>
    <slot />
</button>

<script>
    import { showToast } from "@/lib/toast";

    const botonesBorrarAsistencia = document.querySelectorAll("[data-borrar-asistencia]");
    botonesBorrarAsistencia.forEach(btn => {
        const boton = btn as HTMLButtonElement;
        boton.addEventListener("click", async (e) => {
            const target = e.target as HTMLButtonElement;
            const id = target.dataset.id;

            let element = showToast({
                mensaje: "Borrando asistencia...",
                tipo: "info",
                promise: true
            });
            try{
                const res = await fetch(`/api/asistencia`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ id })
                });
                if(!res.ok) {
                    return showToast({
                        elemento: element,
                        mensaje: "Error al borrar la asistencia",
                        tipo: "error"
                    });
                }
                // Eliminar el elemento del DOM
                const closestDiv = target.closest("div");
                if(closestDiv) closestDiv.remove();
                // Actualizar el contador de asistencias
                const spanAsistencias = document.getElementById('span-asistencias');
                if(spanAsistencias) {
                    const currentCount = parseInt(spanAsistencias.textContent || "0");
                    const invitados = parseInt(boton.dataset.invitados || "0");
                    spanAsistencias.textContent = (currentCount - invitados).toString();
                }
                // Actualizar la cantidad de respuestas
                const spanRespuestas = document.getElementById('span-respuestas');
                if(spanRespuestas) {
                    const currentResponses = parseInt(spanRespuestas.dataset.respuestas || "0");
                    spanRespuestas.dataset.respuestas = (currentResponses - 1).toString();
                    spanRespuestas.textContent = `${currentResponses - 1} ${currentResponses - 1 === 1 ? "persona envió su respuesta" : "personas enviaron sus respuestas"}`;
                }

                // Mostrar mensaje de éxito
                showToast({
                    elemento: element,
                    mensaje: "Asistencia borrada correctamente",
                    tipo: "success"
                });
            } catch(error){
                showToast({
                    elemento: element,
                    mensaje: "Error al borrar la asistencia",
                    tipo: "error"
                });
            }
        });
    })
</script>