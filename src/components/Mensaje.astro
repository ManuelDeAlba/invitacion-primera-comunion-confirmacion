<form id="form-mensaje" class="flex flex-col justify-center items-center gap-4 p-4 rounded-md">
    <h2 class="text-lg">¿Quieres dejar un mensaje para Kimi?</h2>
    <div class="w-[90%]">
        <label for="inputMensaje">Nombre:</label>
        <input type="text" id="inputNombre" name="nombre" class="w-full outline-none p-2 border-2 rounded-md" required />
    </div>
    <div class="w-[90%]">
        <label for="inputMensaje">Mensaje:</label>
        <textarea id="inputMensaje" name="mensaje" class="w-full max-h-40 outline-none p-2 border-2 rounded-md field-sizing-content resize-none"></textarea>
    </div>
    <button type="submit" class="bg-pink-500 hover:bg-pink-400 text-white w-fit py-2 px-8 rounded-md">Enviar mensaje</button>
</form>

<script>
import { enviarMensaje } from "@/firebase";
import { showToast } from "@/lib/toast";

    const form = document.getElementById('form-mensaje') as HTMLFormElement;
    const inputNombre = document.getElementById('inputNombre') as HTMLInputElement;
    const inputMensaje = document.getElementById('inputMensaje') as HTMLTextAreaElement;

    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const nombre = inputNombre.value.trim();
        const mensaje = inputMensaje.value.trim();
        /*
            Hacer funciones de firebase para enviar la asistencia
            1. Probar directamente en el frontend
            2. Hacer un endpoint para probar?
        */
        try{
            await enviarMensaje({
                nombre: nombre,
                mensaje: mensaje,
            });
            console.log(`Nombre: ${nombre}\nMensaje: ${mensaje}`);
            
            showToast({
                mensaje: "Gracias por enviar tu mensaje",
                tipo: "success",
            });
        } catch(error){
            showToast({
                mensaje: "Error al enviar el mensaje, por favor intenta de nuevo más tarde.",
                tipo: "error",
            });
        }
    });
</script>