---
import Layout from "@/layouts/Layout.astro";

import { obtenerAsistencia, obtenerEnviosAsistencia, obtenerMensajes } from "@/firebase";
import FlechaIzquierda from "@/icons/FlechaIzquierda.astro";
import Salir from "@/icons/Salir.astro";

const totalAsistencias = await obtenerAsistencia();
const totalEnviosAsistencia = await obtenerEnviosAsistencia();
const mensajes = await obtenerMensajes();

const dateFormatter = new Intl.DateTimeFormat("es-MX", {
    dateStyle: "medium",
    timeStyle: "short",
});
---

<Layout>
    <main class="py-8 space-y-8">
        <div class="w-[90%] max-w-3xl mx-auto flex justify-between items-center">
            <a href="/" class="text-amber-500 hover:text-amber-600 transition-colors flex items-center gap-2 hover:underline">
                <FlechaIzquierda />
                Inicio
            </a>
            <button id="btnSalir" class="flex items-center gap-2 bg-amber-600 hover:bg-amber-700 text-white px-4 py-2 rounded-md transition-colors">
                <Salir />
                Salir
            </button>
        </div>

        <div class="w-[90%] max-w-3xl bg-white mx-auto flex flex-col justify-center items-center gap-4 p-8 rounded-md">
            <h2 class="text-lg font-bold text-black/80">Asistencias totales:</h2>
            <span class="text-5xl font-bold text-amber-600" id="span-asistencias">0</span>
            <span class="text-black/80 self-end text-sm text-right">{totalEnviosAsistencia} {totalEnviosAsistencia === 1 ? "persona envió su respuesta" : "personas enviaron sus respuestas"} </span>
        </div>

        <div class="w-[90%] max-w-3xl bg-white mx-auto flex flex-col justify-center gap-4 p-8 rounded-md">
            <h2 class="text-lg font-bold text-black/80">
                Mensajes 
                <span class="text-sm text-black/60">( {mensajes.length} )</span>:
            </h2>
            {
                mensajes.length > 0 ? (
                    mensajes.map(mensaje => (
                        <div class="w-full space-y-2 p-4 bg-amber-50 rounded-md shadow-md">
                            <p class="font-bold text-black/80">{mensaje.nombre}</p>
                            <p class="text-gray-500 text-sm text-right" data-fecha={mensaje.fecha}>{dateFormatter.format(new Date(mensaje.fecha))}</p>
                            <p>{mensaje.mensaje}</p>
                        </div>
                    ))
                ) : (
                    <p class="text-gray-500">No hay mensajes aún.</p>
                )
            }
        </div>
    </main>
</Layout>

<script define:vars={{ totalAsistencias }}>
    const spanAsistencias = document.getElementById('span-asistencias');
    const btnSalir = document.getElementById('btnSalir');

    let contador = 0;
    
    // Contador para mostrar las asistencias de forma progresiva
    let intervalo = setInterval(() => {
        if(contador > totalAsistencias) {
            contador = totalAsistencias;
            clearInterval(intervalo);
            return;
        }
        spanAsistencias.textContent = contador.toString();
        contador++;
    }, 1000 / totalAsistencias)

    // Boton para cerrar sesión
    btnSalir.addEventListener("click", async () => {
        const res = await fetch("/api/inicio-sesion", {
            method: "DELETE"
        })
        if(res.redirected) window.location.href = res.url;
    })

    // Actualizar la fecha de los mensajes con el timezone y locale correcto
    const locale = Intl.DateTimeFormat().resolvedOptions().locale;
    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    const fechasMensajes = document.querySelectorAll("[data-fecha]");
    fechasMensajes.forEach(fecha => {
        const dateFormatter = new Intl.DateTimeFormat(locale, {
            dateStyle: "medium",
            timeStyle: "short",
            timeZone: timezone
        });
        fecha.textContent = dateFormatter.format(new Date(parseInt(fecha.dataset.fecha)));
    });
</script>